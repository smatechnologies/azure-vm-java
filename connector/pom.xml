<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.smatechnologies</groupId>
  <artifactId>msazure.vm.connector</artifactId>
  <version>21.1.0</version>
  <packaging>jar</packaging>

  <name>msazure.vm.connector</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>11</java.version>
    <jcommander.version>1.72</jcommander.version>
	<release.dir>${project.basedir}/azure-vm-dist</release.dir>
	<jersey.version>2.27</jersey.version>
	<jackson.version>2.10.0</jackson.version>
    <jaxb.api.version>2.3.0</jaxb.api.version>
    <opcon.rest.api.version>21.0.1</opcon.rest.api.version>
    <org.glassfish.hk2.version>2.6.0</org.glassfish.hk2.version>
  </properties>
  
  	<repositories>
	    <repository>
	      	<id>central maven repo</id>
	      	<name>central maven repo https</name>
	      	<url>https://repo.maven.apache.org/maven2</url>
	    </repository>
    </repositories>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>args4j</groupId>
      <artifactId>args4j</artifactId>
      <version>2.33</version>
    </dependency>
    <dependency>
      <groupId>org.ini4j</groupId>
      <artifactId>ini4j</artifactId>
      <version>0.5.2</version>
    </dependency>
     <dependency>
      <groupId>com.microsoft.azure</groupId>
      <artifactId>azure</artifactId>
      <version>1.29.0</version>
    </dependency>
	<dependency>
      <groupId>commons-net</groupId>
      <artifactId>commons-net</artifactId>
      <version>3.3</version>
    </dependency>
	<dependency>
	  <groupId>commons-io</groupId>
	  <artifactId>commons-io</artifactId>
	  <version>2.6</version>
	</dependency>
	<dependency>
	  <groupId>org.apache.commons</groupId>
	  <artifactId>commons-lang3</artifactId>
	  <version>3.8</version>
	</dependency>
	<!-- jackson -->
	<dependency>
	  <groupId>com.fasterxml.jackson.core</groupId>
	  <artifactId>jackson-core</artifactId>
	  <version>${jackson.version}</version>
	</dependency>
	<dependency>
	  <groupId>com.fasterxml.jackson.core</groupId>
	  <artifactId>jackson-annotations</artifactId>
	  <version>${jackson.version}</version>
	</dependency>
	<dependency>
	  <groupId>com.fasterxml.jackson.core</groupId>
	  <artifactId>jackson-databind</artifactId>
	  <version>${jackson.version}</version>
	</dependency>
	
	<!-- jersey client -->
    <dependency>
    	<groupId>org.glassfish.jersey.core</groupId>
        <artifactId>jersey-client</artifactId>
        <version>${jersey.version}</version>
    </dependency>
    <dependency>
    	<groupId>org.glassfish.jersey.media</groupId>
        <artifactId>jersey-media-json-jackson</artifactId>
        <version>${jersey.version}</version>
    </dependency>
    <dependency>
    	<groupId>org.glassfish.jersey.inject</groupId>
        <artifactId>jersey-hk2</artifactId>
        <version>${jersey.version}</version>
    </dependency>
    <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>${jaxb.api.version}</version>
    </dependency>
    <dependency>
    	<groupId>org.glassfish.hk2</groupId>
    	<artifactId>hk2-utils</artifactId>
    	<version>${org.glassfish.hk2.version}</version>
    </dependency>
    <dependency>
    	<groupId>org.glassfish.hk2</groupId>
    	<artifactId>hk2-api</artifactId>
    	<version>${org.glassfish.hk2.version}</version>
    </dependency>
    <dependency>
         <groupId>javax.activation</groupId>
         <artifactId>javax.activation-api</artifactId>
         <version>1.2.0</version>
     </dependency>
    <dependency>
    	<groupId>com.googlecode.json-simple</groupId>
    	<artifactId>json-simple</artifactId>
    	<version>1.1</version>
    </dependency>
	<dependency>
	    <groupId>commons-codec</groupId>
	    <artifactId>commons-codec</artifactId>
	    <version>1.10</version>
	</dependency>  
    <dependency>
      <groupId>org.apache.cayenne</groupId>
      <artifactId>cayenne-server</artifactId>
      <version>3.0</version>
    </dependency>
	<dependency> 
	  <groupId>ch.qos.logback</groupId>
	  <artifactId>logback-classic</artifactId>
	  <version>1.2.3</version>
	</dependency>	
    <dependency>
      <groupId>org.codehaus.janino</groupId>
      <artifactId>janino</artifactId>
      <version>3.0.8</version>
    </dependency>
	<dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.30</version>
	</dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>1.7.30</version> 
    </dependency>
	<!-- OpCon API -->
    <dependency>
      <groupId>com.smatechnologies</groupId>
      <artifactId>opcon-rest-api-client</artifactId>
      <version>${opcon.rest.api.version}</version>
	</dependency>
  </dependencies>
  <build>
     <finalName>${project.artifactId}</finalName>
	 <plugins>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>3.8.0</version>
			<configuration>
				<release>${java.version}</release>
			</configuration>
		</plugin>
  		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-clean-plugin</artifactId>
			<version>2.5</version>
			<configuration>
				<filesets>
					<fileset>
						<directory>${release.dir}</directory>
						<includes>
							<include>*.*</include>
						</includes>
					</fileset>
				</filesets>
			</configuration>
  		</plugin>
      	<plugin>
        	<groupId>org.apache.maven.plugins</groupId>
        	<artifactId>maven-shade-plugin</artifactId>
    		<version>3.1.0</version>
        	<executions>
          		<execution>
            		<phase>package</phase>
            		<goals>
              			<goal>shade</goal>
            		</goals>
          		</execution>
        	</executions>
        	<configuration>
                  <createDependencyReducedPom>false</createDependencyReducedPom>
                  <transformers>
                      <transformer
                              implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                      <transformer
                              implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                          <manifestEntries>
             				<mainClass>com.smatechnologies.msazure.vm.connector.VmConnector</mainClass>
                          </manifestEntries>
                      </transformer>
                  </transformers>
                  <filters>
                      <filter>
                          <artifact>*:*</artifact>
                          <excludes>
                              <exclude>META-INF/*.SF</exclude>
                              <exclude>META-INF/*.DSA</exclude>
                              <exclude>META-INF/*.RSA</exclude>
                          </excludes>
                      </filter>
                  </filters>
        	</configuration>
      	</plugin>
     		<plugin>
    	  		<groupId>com.akathist.maven.plugins.launch4j</groupId>
    	  		<artifactId>launch4j-maven-plugin</artifactId>
 	  	  		<version>1.7.25</version>
    	  		<executions>
 	   	    		<execution>
	           			<id>l4j-encrypt</id>
	           			<phase>package</phase>
	           			<goals>
	             				<goal>launch4j</goal>
	           			</goals>
	           			<configuration>
	             				<headerType>console</headerType>
	             				<outfile>${release.dir}/Encrypt.exe</outfile>
	             				<jar>${project.build.directory}/${project.artifactId}.jar</jar> 
			        		<classPath>
			          			<mainClass>com.smatechnologies.msazure.vm.connector.EncryptValue</mainClass>
			        		</classPath>
			        		<jre>
			          			<path>./java</path>
			        		</jre>
	           			</configuration>
	   	    		</execution>
    	    		<execution>
            			<id>l4j-connector</id>
            			<phase>package</phase>
            			<goals>
              				<goal>launch4j</goal>
            			</goals>
            			<configuration>
              				<headerType>console</headerType>
              				<outfile>${release.dir}/AzureVM.exe</outfile>
             				<jar>${project.build.directory}/${project.artifactId}.jar</jar> 
			        		<classPath>
			          			<mainClass>com.smatechnologies.msazure.vm.connector.VmConnector</mainClass>
			        		</classPath>
			        		<jre>
			          			<path>./java</path>
			        		</jre>
            			</configuration>
    	    		</execution>
    	  		</executions>
      		</plugin> 
 	  		<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
		  			<execution>
						<id>copy-install</id>
						<phase>prepare-package</phase>
						<configuration>
			  				<target>
	               				<copy file="${project.basedir}/src/main/resources/Connector.config" todir="${release.dir}"/>
	               				<copy file="${project.basedir}/src/main/resources/com.sma.ui.core.jobdetails.msazurevm_1.0.0.202304061155.jar" todir="${release.dir}"/>
							</target>
						</configuration>
						<goals>
			  				<goal>run</goal>
						</goals>
		  			</execution>
				</executions>
	  		</plugin>
	   	</plugins>
	</build>
</project>
